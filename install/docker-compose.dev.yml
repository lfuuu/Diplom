

services:

  base-image:
    environment:
      - HOST_UID=${HOST_UID}
      - HOST_GID=${HOST_GID}    
    build:
      context: ./cont_base
      dockerfile: Dockerfile.base
      args:
          HOST_UID: ${HOST_UID}
          HOST_GID: ${HOST_GID}      
    image: ${COMPOSE_PROJECT_NAME}-base:latest

  nginx:
    image: nginx
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    ports:
      - 8022:80
    volumes:
      - ./cont_nginx/conf.d:/etc/nginx/conf.d
      - ./cont_nginx/data:/usr/share/nginx/html
    depends_on:
      - pgadmin4

  db:
    ports:
      - "43432:5432"
    build:
      context: ./cont_postgresql
      dockerfile: Dockerfile
    volumes:
      - ./cont_postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=nispd
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/var/lib/postgresql/data/pgdata
    #restart: unless-stopped

  pgadmin4:
    image: dpage/pgadmin4
    hostname: pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mcn.ru
      - PGADMIN_DEFAULT_PASSWORD=adminmcn
      - PGADMIN_SERVER_JSON_FILE=/mnt/pgadmin-servers.json
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0

    depends_on:
      - db
    volumes:
      - ./cont_pgadmin/pgadmin-servers.json:/mnt/pgadmin-servers.json
    logging:
      driver: "none"

  backend-admin:
    hostname: backend-admin
    build:
      context: ./cont_backend
      dockerfile: Dockerfile.dev
      args:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
    environment:
    - DATABASE_URL="postgres://devuser:devpass@postgres:5432/trunkdev"
    volumes:
    - ./cont_backend/backend-admin:/home/appuser/src
    - ./workspace:/workspace
    command: sleep infinity


  backend-lk:
    hostname: backend-lk
    build:
      context: ./cont_backend
      dockerfile: Dockerfile.dev
      args:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://devuser:devpass@postgres:5432/trunkdev
    volumes:
      - ./cont_backend/backend-lk:/home/appuser/src
      - ./workspace:/workspace
    command: sleep infinity

  frontend-admin:
    hostname: frontend-admin
    build:
      context: ./cont_frontend
      dockerfile: Dockerfile.dev
      args:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}    
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://devuser:devpass@postgres:5432/trunkdev
    volumes:
      - ./cont_frontend/frontend-admin:/home/appuser/src
      - ./workspace:/workspace
    command: sleep infinity

  frontend-lk:
    hostname: frontend-admin
    build:
      context: ./cont_frontend
      dockerfile: Dockerfile.dev
      args:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}    
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://devuser:devpass@postgres:5432/trunkdev
    volumes:
      - ./cont_frontend/frontend-lk:/home/appuser/src
      - ./workspace:/workspace
    command: sleep infinity
