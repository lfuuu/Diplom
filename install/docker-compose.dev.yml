version: '3'

services:

  nginx:
    image: nginx
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    ports:
      - 8022:80
    volumes:
      - ./cont_nginx/conf.d:/etc/nginx/conf.d
      - ./cont_nginx/data:/usr/share/nginx/html
    depends_on:
      - pgadmin4

  db:
    ports:
      - "43432:5432"
    build:
      context: ./cont_postgresql
      dockerfile: Dockerfile
    volumes:
      #- ./var_pgdb:/var/lib/postgresql/data
      - ./cont_postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=nispd
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/var/lib/postgresql/data/pgdata
    #restart: unless-stopped

  pgadmin4:
    image: dpage/pgadmin4
    hostname: pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mcn.ru
      - PGADMIN_DEFAULT_PASSWORD=adminmcn
      - PGADMIN_SERVER_JSON_FILE=/mnt/pgadmin-servers.json
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0

    depends_on:
      - db
    volumes:
      - ./cont_pgadmin/pgadmin-servers.json:/mnt/pgadmin-servers.json
    logging:
      driver: "none"

  backend-admin:
    hostname: backend-admin
    build:
      context: ./cont_backend
      dockerfile: Dockerfile.dev
      args:
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}      
    environment:
      - HOST_UID=${HOST_UID}
      - HOST_GID=${HOST_GID}    
      - DATABASE_URL="postgres://devuser:devpass@postgres:5432/trunkdev"
    # ports:
    #   - "3000:3000"
    #   - "9229:9229" # Node.js debug port
    #command: npm run dev:debug
    volumes:
      - ./cont_backend/backend-admin:/home/appuser/src
      - ./workspace:/workspace
    command: sleep infinity


  # backend-lk:
  #   hostname: backend-lk
  #   build:
  #     context: ./cont_backend
  #     dockerfile: Dockerfile.dev
  #   #volumes:
  #     # - ./backend:/app
  #     # - /app/node_modules
  #   environment:
  #     NODE_ENV: development
  #     DATABASE_URL: postgres://devuser:devpass@postgres:5432/trunkdev
  #   # ports:
  #   #   - "3000:3000"
  #   #   - "9229:9229" # Node.js debug port
  #   #command: npm run dev:debug
  #   volumes:
  #     - ./cont_backend/backend-lk:/app/src
  #   command: sleep infinity

  # frontend-admin:
  #   hostname: frontend-admin
  #   build:
  #     context: ./cont_frontend
  #     dockerfile: Dockerfile.dev
  #   #volumes:
  #     # - ./frontend:/app
  #     # - /app/node_modules      
  #   environment:
  #     NODE_ENV: development
  #   volumes:
  #     - ./cont_backend/frontend-admin:/root/src
  #   # ports:
  #   #   - "4200:4200"
  #   #   - "49153:49153" # Angular debug port
  #   #command: npm start
  #   command: sleep infinity


  # frontend-lk:
  #   hostname: frontend-lk
  #   build:
  #     context: ./cont_frontend
  #     dockerfile: Dockerfile.dev
  #   #volumes:
  #     # - ./frontend:/app
  #     # - /app/node_modules      
  #   environment:
  #     NODE_ENV: development
  #   volumes:
  #     - ./cont_backend/frontend-lk:/root/src
  #   # ports:
  #   #   - "4200:4200"
  #   #   - "49153:49153" # Angular debug port
  #   #command: npm start
  #   command: sleep infinity